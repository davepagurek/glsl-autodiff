{"version":3,"file":"repl.js","sourceRoot":"","sources":["../src/repl.ts"],"names":[],"mappings":"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","sourcesContent":["import { diffLines } from 'diff';\nimport { homedir } from 'os';\nimport { join } from 'path';\nimport { Recoverable, start } from 'repl';\nimport { Script } from 'vm';\nimport { Service, CreateOptions, TSError, env } from './index';\nimport { readFileSync, statSync } from 'fs';\nimport { Console } from 'console';\nimport type * as tty from 'tty';\n\n/**\n * Eval filename for REPL/debug.\n * @internal\n */\nexport const EVAL_FILENAME = `[eval].ts`;\n\nexport interface ReplService {\n  readonly state: EvalState;\n  /**\n   * Bind this REPL to a ts-node compiler service.  A compiler service must be bound before `eval`-ing code or starting the REPL\n   */\n  setService(service: Service): void;\n  evalCode(code: string): void;\n  /**\n   * `eval` implementation compatible with node's REPL API\n   */\n  nodeEval(\n    code: string,\n    _context: any,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ): void;\n  evalAwarePartialHost: EvalAwarePartialHost;\n  /** Start a node REPL */\n  start(code?: string): void;\n  /** @internal */\n  readonly stdin: NodeJS.ReadableStream;\n  /** @internal */\n  readonly stdout: NodeJS.WritableStream;\n  /** @internal */\n  readonly stderr: NodeJS.WritableStream;\n  /** @internal */\n  readonly console: Console;\n}\n\nexport interface CreateReplOptions {\n  service?: Service;\n  state?: EvalState;\n  stdin?: NodeJS.ReadableStream;\n  stdout?: NodeJS.WritableStream;\n  stderr?: NodeJS.WritableStream;\n}\n\n/**\n * Create a ts-node REPL instance.\n *\n * Usage example:\n *\n *     const repl = tsNode.createRepl()\n *     const service = tsNode.create({...repl.evalAwarePartialHost})\n *     repl.setService(service)\n *     repl.start()\n */\nexport function createRepl(options: CreateReplOptions = {}) {\n  let service = options.service;\n  const state =\n    options.state ?? new EvalState(join(process.cwd(), EVAL_FILENAME));\n  const evalAwarePartialHost = createEvalAwarePartialHost(state);\n  const stdin = options.stdin ?? process.stdin;\n  const stdout = options.stdout ?? process.stdout;\n  const stderr = options.stderr ?? process.stderr;\n  const _console =\n    stdout === process.stdout && stderr === process.stderr\n      ? console\n      : new Console(stdout, stderr);\n\n  const replService: ReplService = {\n    state: options.state ?? new EvalState(join(process.cwd(), EVAL_FILENAME)),\n    setService,\n    evalCode,\n    nodeEval,\n    evalAwarePartialHost,\n    start,\n    stdin,\n    stdout,\n    stderr,\n    console: _console,\n  };\n  return replService;\n\n  function setService(_service: Service) {\n    service = _service;\n  }\n\n  function evalCode(code: string) {\n    return _eval(service!, state, code);\n  }\n\n  function nodeEval(\n    code: string,\n    _context: any,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ) {\n    let err: Error | null = null;\n    let result: any;\n\n    // TODO: Figure out how to handle completion here.\n    if (code === '.scope') {\n      callback(err);\n      return;\n    }\n\n    try {\n      result = evalCode(code);\n    } catch (error) {\n      if (error instanceof TSError) {\n        // Support recoverable compilations using >= node 6.\n        if (Recoverable && isRecoverable(error)) {\n          err = new Recoverable(error);\n        } else {\n          _console.error(error);\n        }\n      } else {\n        err = error;\n      }\n    }\n\n    return callback(err, result);\n  }\n\n  function start(code?: string) {\n    // TODO assert that service is set; remove all ! postfixes\n    return startRepl(replService, service!, state, code);\n  }\n}\n\n/**\n * Eval state management. Stores virtual `[eval].ts` file\n */\nexport class EvalState {\n  /** @internal */\n  input = '';\n  /** @internal */\n  output = '';\n  /** @internal */\n  version = 0;\n  /** @internal */\n  lines = 0;\n\n  __tsNodeEvalStateBrand: unknown;\n\n  constructor(public path: string) {}\n}\n\n/**\n * Filesystem host functions which are aware of the \"virtual\" [eval].ts file used to compile REPL inputs.\n * Must be passed to `create()` to create a ts-node compiler service which can compile REPL inputs.\n */\nexport type EvalAwarePartialHost = Pick<\n  CreateOptions,\n  'readFile' | 'fileExists'\n>;\n\nexport function createEvalAwarePartialHost(\n  state: EvalState\n): EvalAwarePartialHost {\n  function readFile(path: string) {\n    if (path === state.path) return state.input;\n\n    try {\n      return readFileSync(path, 'utf8');\n    } catch (err) {\n      /* Ignore. */\n    }\n  }\n  function fileExists(path: string) {\n    if (path === state.path) return true;\n\n    try {\n      const stats = statSync(path);\n      return stats.isFile() || stats.isFIFO();\n    } catch (err) {\n      return false;\n    }\n  }\n  return { readFile, fileExists };\n}\n\n/**\n * Evaluate the code snippet.\n */\nfunction _eval(service: Service, state: EvalState, input: string) {\n  const lines = state.lines;\n  const isCompletion = !/\\n$/.test(input);\n  const undo = appendEval(state, input);\n  let output: string;\n\n  try {\n    output = service.compile(state.input, state.path, -lines);\n  } catch (err) {\n    undo();\n    throw err;\n  }\n\n  // Use `diff` to check for new JavaScript to execute.\n  const changes = diffLines(state.output, output);\n\n  if (isCompletion) {\n    undo();\n  } else {\n    state.output = output;\n  }\n\n  return changes.reduce((result, change) => {\n    return change.added ? exec(change.value, state.path) : result;\n  }, undefined);\n}\n\n/**\n * Execute some code.\n */\nfunction exec(code: string, filename: string) {\n  const script = new Script(code, { filename: filename });\n\n  return script.runInThisContext();\n}\n\n/**\n * Start a CLI REPL.\n */\nfunction startRepl(\n  replService: ReplService,\n  service: Service,\n  state: EvalState,\n  code?: string\n) {\n  // Eval incoming code before the REPL starts.\n  if (code) {\n    try {\n      replService.evalCode(`${code}\\n`);\n    } catch (err) {\n      replService.console.error(err);\n      process.exit(1);\n    }\n  }\n\n  const repl = start({\n    prompt: '> ',\n    input: replService.stdin,\n    output: replService.stdout,\n    // Mimicking node's REPL implementation: https://github.com/nodejs/node/blob/168b22ba073ee1cbf8d0bcb4ded7ff3099335d04/lib/internal/repl.js#L28-L30\n    terminal:\n      (replService.stdout as tty.WriteStream).isTTY &&\n      !parseInt(env.NODE_NO_READLINE!, 10),\n    eval: replService.nodeEval,\n    useGlobal: true,\n  });\n\n  // Bookmark the point where we should reset the REPL state.\n  const resetEval = appendEval(state, '');\n\n  function reset() {\n    resetEval();\n\n    // Hard fix for TypeScript forcing `Object.defineProperty(exports, ...)`.\n    exec('exports = module.exports', state.path);\n  }\n\n  reset();\n  repl.on('reset', reset);\n\n  repl.defineCommand('type', {\n    help: 'Check the type of a TypeScript identifier',\n    action: function (identifier: string) {\n      if (!identifier) {\n        repl.displayPrompt();\n        return;\n      }\n\n      const undo = appendEval(state, identifier);\n      const { name, comment } = service.getTypeInfo(\n        state.input,\n        state.path,\n        state.input.length\n      );\n\n      undo();\n\n      if (name) repl.outputStream.write(`${name}\\n`);\n      if (comment) repl.outputStream.write(`${comment}\\n`);\n      repl.displayPrompt();\n    },\n  });\n\n  // Set up REPL history when available natively via node.js >= 11.\n  if (repl.setupHistory) {\n    const historyPath =\n      env.TS_NODE_HISTORY || join(homedir(), '.ts_node_repl_history');\n\n    repl.setupHistory(historyPath, (err) => {\n      if (!err) return;\n\n      replService.console.error(err);\n      process.exit(1);\n    });\n  }\n}\n\n/**\n * Append to the eval instance and return an undo function.\n */\nfunction appendEval(state: EvalState, input: string) {\n  const undoInput = state.input;\n  const undoVersion = state.version;\n  const undoOutput = state.output;\n  const undoLines = state.lines;\n\n  // Handle ASI issues with TypeScript re-evaluation.\n  if (\n    undoInput.charAt(undoInput.length - 1) === '\\n' &&\n    /^\\s*[\\/\\[(`-]/.test(input) &&\n    !/;\\s*$/.test(undoInput)\n  ) {\n    state.input = `${state.input.slice(0, -1)};\\n`;\n  }\n\n  state.input += input;\n  state.lines += lineCount(input);\n  state.version++;\n\n  return function () {\n    state.input = undoInput;\n    state.output = undoOutput;\n    state.version = undoVersion;\n    state.lines = undoLines;\n  };\n}\n\n/**\n * Count the number of lines.\n */\nfunction lineCount(value: string) {\n  let count = 0;\n\n  for (const char of value) {\n    if (char === '\\n') {\n      count++;\n    }\n  }\n\n  return count;\n}\n\nconst RECOVERY_CODES: Set<number> = new Set([\n  1003, // \"Identifier expected.\"\n  1005, // \"')' expected.\"\n  1109, // \"Expression expected.\"\n  1126, // \"Unexpected end of text.\"\n  1160, // \"Unterminated template literal.\"\n  1161, // \"Unterminated regular expression literal.\"\n  2355, // \"A function whose declared type is neither 'void' nor 'any' must return a value.\"\n]);\n\n/**\n * Check if a function can recover gracefully.\n */\nfunction isRecoverable(error: TSError) {\n  return error.diagnosticCodes.every((code) => RECOVERY_CODES.has(code));\n}\n"]}